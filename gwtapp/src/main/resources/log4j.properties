### The root logger resides at the top of the logger hierarchy. It always exists and always has an assigned level.

### The logger is the core component of the logging process. In log4j, there are 5 normal levels Levels of logger available (not including custom Levels), the following is borrowed from the log4j API (http://jakarta.apache.org/log4j/docs/api/index.html):
### static Level DEBUG - The DEBUG Level designates fine-grained informational events that are most useful to debug an application.
### static Level INFO - The INFO level designates informational messages that highlight the progress of the application at coarse-grained level.
### static Level WARN - The WARN level designates potentially harmful situations.
### static Level ERROR - The ERROR level designates error events that might still allow the application to continue running.
### static Level FATAL - The FATAL level designates very severe error events that will presumably lead the application to abort.

### In addition, there are two special levels of logging available: (descriptions borrowed from the log4j API http://jakarta.apache.org/log4j/docs/api/index.html):

### static Level ALL -The ALL Level has the lowest possible rank and is intended to turn on all logging.
### static Level OFF - The OFF Level has the highest possible rank and is intended to turn off logging.

### direct log messages to stdout ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### direct messages to file hibernate.log ###
#log4j.appender.file=org.apache.log4j.FileAppender
#log4j.appender.file.File=hibernate.log
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### set log levels - for more verbose logging change 'info' to 'debug' ###

log4j.rootLogger=debug,stdout

log4j.logger.com.cuprum.server.common.model.user.LogIn=debug
log4j.logger.com.cuprum.common.utils.HibernateUtil=debug
log4j.logger.com.cuprum.server.common.entities=debug
#log4j.logger.com.cuprum.server.common.entities.EntityTest=debug

log4j.logger.org.hibernate=warn
#log4j.logger.org.hibernate=debug

### log HQL query parser activity
#log4j.logger.org.hibernate.hql.ast.AST=debug

### log just the SQL
#log4j.logger.org.hibernate.SQL=debug

### log JDBC bind parameters ###
log4j.logger.org.hibernate.type=info
#log4j.logger.org.hibernate.type=debug

### log schema export/update ###
#log4j.logger.org.hibernate.tool.hbm2ddl=debug

### log HQL parse trees
#log4j.logger.org.hibernate.hql=debug

### log cache activity ###
#log4j.logger.org.hibernate.cache=debug

### log transaction activity
#log4j.logger.org.hibernate.transaction=debug

### log JDBC resource acquisition
#log4j.logger.org.hibernate.jdbc=debug

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace
